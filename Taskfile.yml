version: '3'

vars:
  os: "{{OS}}"
  arch: '{{ternary "arm64" ARCH (eq ARCH "arm")}}'
  dist_dir: dist
  bin_name: teleconnect
  install_dir: '{{default ("$HOME/go/bin") .INSTALL_DIR}}'

tasks:
  test:
    desc: Run unit tests
    cmds:
      - go test -v ./...

  _build:
    cmds:
      - go build -o "{{.dist_dir}}/$GOOS-$GOARCH/{{.bin_name}}" cmd/{{.bin_name}}/main.go
    env:
      GOOS: "{{.targetOS}}"
      GOARCH: "{{.targetArch}}"

  build:dev:
    desc: Build binary for current platform
    cmds:
      - task: _build
        vars:
          targetOS: "{{.os}}"
          targetArch: "{{.arch}}"

  build:dist:
    desc: Build binaries for all platforms
    deps:
      - build:dist:linux:amd64
      - build:dist:linux:arm64
      - build:dist:darwin:amd64
      - build:dist:darwin:arm64
  
  build:dist:linux:amd64:
    desc: Build binary for linux/amd64
    cmds:
      - task: _build
        vars:
          targetOS: linux
          targetArch: amd64
  
  build:dist:linux:arm64:
    desc: Build binary for linux/arm64
    cmds:
      - task: _build
        vars:
          targetOS: linux
          targetArch: arm64
  
  build:dist:darwin:amd64:
    desc: Build binary for darwin/amd64
    cmds:
      - task: _build
        vars:
          targetOS: darwin
          targetArch: amd64

  build:dist:darwin:arm64:
    desc: Build binary for darwin/arm64
    cmds:
      - task: _build
        vars:
          targetOS: darwin
          targetArch: arm64
          
  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf {{.dist_dir}}
